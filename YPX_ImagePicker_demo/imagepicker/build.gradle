apply plugin: 'com.android.library'

android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'com.oginotihiro:cropview:1.0.0'
}



apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

//更新代码：
group = "com.ypx.imagepicker"            // Maven Group ID for the artifact，
version = "2.0.1"

def siteUrl = 'https://github.com/yangpeixing/YPXImagePicker'   // 项目的主页
def gitUrl = 'https://github.com/yangpeixing/YPXImagePicker.git'   // Git仓库的url

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                name '高仿微信图片选择框架、小红书图片剪裁框架、支持UI自定义、支持跨进程回调 '   //项目的描述 你可以多写一点
                url siteUrl
                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'ypx'        //填写的一些基本信息
                        name 'ypx'
                        email '313930500@qq.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

Properties properties = new Properties()
//读取properties的配置信息，当然直接把信息写到代码里也是可以的
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = "ypxImagePicker"    //这个应该是传到maven的仓库的名字
        name = "ypxImagePicker"    //发布的项目名字
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}

